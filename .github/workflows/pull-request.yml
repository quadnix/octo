name: "Pull Request Workflow"

on:
  pull_request:
    branches:
      - main
    types:
      - edited
      - opened
      - reopened
      - synchronize

jobs:
  pr-quality-check:
    continue-on-error: false
    name: PR Quality Check
    permissions:
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Validate PR Title
        run: |-
          .github/jobs/validate-pr-title.sh "${{ github.event.pull_request.title }}"

  code-quality-check:
    continue-on-error: false
    name: Code Quality Check
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache Setup
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Cache nx
        uses: actions/cache@v4
        with:
          path: .nx
          key: ${{ runner.os }}-nx
      - name: Install Dependencies
        run: npm install
      - name: Lint
        run: npm run lint

  build-check:
    continue-on-error: false
    name: Build Check
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache Setup
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
      - id: cache-primes
        name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Cache nx
        uses: actions/cache@v4
        with:
          path: .nx
          key: ${{ runner.os }}-nx
      - name: Install Dependencies
        run: npm install
      - name: Unit Tests
        run: npm test
