// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TransactionService UT applyModels() should call action and collect all input and output 1`] = `
[
  [
    {
      "action": "add",
      "field": "name",
      "model": "app=app",
      "value": "app",
    },
    {
      "input.key1": "value1",
    },
  ],
]
`;

exports[`TransactionService UT applyModels() should call action and collect all input and output 2`] = `
[
  "resource1",
]
`;

exports[`TransactionService UT applyModels() should call multiple actions and collect all input and output 1`] = `
[
  [
    {
      "action": "add",
      "field": "name",
      "model": "app=app",
      "value": "app",
    },
    {
      "input.key1": "value1",
    },
  ],
]
`;

exports[`TransactionService UT applyModels() should call multiple actions and collect all input and output 2`] = `
[
  [
    {
      "action": "add",
      "field": "name",
      "model": "app=app",
      "value": "app",
    },
    {
      "input.key2": "value2",
    },
  ],
]
`;

exports[`TransactionService UT applyModels() should call multiple actions and collect all input and output 3`] = `
[
  "resource1",
  "resource2",
]
`;

exports[`TransactionService UT applyModels() should merge the shared-resource with existing set of resources 1`] = `
[
  "shared-resource",
]
`;

exports[`TransactionService UT applyModels() should only process 1 matching diff when duplicates found 1`] = `
[
  [
    {
      "action": "add",
      "field": "name",
      "model": "app=app",
      "value": "app",
    },
  ],
]
`;

exports[`TransactionService UT applyModels() should process diffs in different levels 1`] = `
[
  [
    {
      "action": "add",
      "field": "name",
      "model": "app=app",
      "value": "app",
    },
  ],
  [
    {
      "action": "add",
      "field": "regionId",
      "model": "region=region,app=app",
      "value": "region",
    },
  ],
]
`;

exports[`TransactionService UT applyResources() should only process 1 matching diff when duplicates found 1`] = `
[
  [
    {
      "action": "add",
      "field": "resourceId",
      "model": "test-resource=resource-1",
      "value": "resource-1",
    },
  ],
]
`;

exports[`TransactionService UT applyResources() should process diffs of deleting resources per dependency graph 1`] = `
[
  [
    {
      "action": "delete",
      "field": "resourceId",
      "model": "test-resource=resource-2",
      "value": "resource-2",
    },
  ],
  [
    {
      "action": "delete",
      "field": "resourceId",
      "model": "test-resource=resource-1",
      "value": "resource-1",
    },
  ],
]
`;

exports[`TransactionService UT applyResources() should process diffs of resources per dependency graph 1`] = `
[
  [
    {
      "action": "add",
      "field": "resourceId",
      "model": "test-resource=resource-2",
      "value": "resource-2",
    },
  ],
  [
    {
      "action": "add",
      "field": "resourceId",
      "model": "test-resource=resource-1",
      "value": "resource-1",
    },
  ],
]
`;

exports[`TransactionService UT beginTransaction() yieldModelDiffs should yield model diffs 1`] = `
[
  [
    {
      "action": "add",
      "field": "name",
      "model": "app=app",
      "value": "app",
    },
  ],
]
`;

exports[`TransactionService UT beginTransaction() yieldModelDiffs should yield model diffs with overlays 1`] = `
[
  [
    {
      "action": "add",
      "field": "overlayId",
      "model": "test-overlay=test-overlay",
      "value": "test-overlay",
    },
  ],
]
`;

exports[`TransactionService UT beginTransaction() yieldModelTransaction should yield model transaction 1`] = `
[
  [
    {
      "action": "add",
      "field": "name",
      "model": "app=app",
      "value": "app",
    },
  ],
]
`;

exports[`TransactionService UT beginTransaction() yieldModelTransaction should yield model transaction with overlays 1`] = `
[
  [
    {
      "action": "add",
      "field": "overlayId",
      "model": "test-overlay=test-overlay",
      "value": "test-overlay",
    },
  ],
]
`;

exports[`TransactionService UT beginTransaction() yieldResourceDiffs should yield resource diffs 1`] = `
[
  [
    {
      "action": "delete",
      "field": "resourceId",
      "model": "test-resource=resource-1",
      "value": "resource-1",
    },
    {
      "action": "add",
      "field": "resourceId",
      "model": "test-resource=resource-2",
      "value": "resource-2",
    },
  ],
]
`;

exports[`TransactionService UT beginTransaction() yieldResourceTransaction should yield resource transaction 1`] = `
[
  [
    {
      "action": "delete",
      "field": "resourceId",
      "model": "test-resource=resource-1",
      "value": "resource-1",
    },
    {
      "action": "add",
      "field": "resourceId",
      "model": "test-resource=resource-2",
      "value": "resource-2",
    },
  ],
]
`;

exports[`TransactionService UT rollbackTransaction() should be able to revert addition of resources 1`] = `
[
  [
    {
      "action": "delete",
      "field": "resourceId",
      "model": "test-resource=resource-1",
      "value": "resource-1",
    },
  ],
]
`;

exports[`TransactionService UT rollbackTransaction() should be able to revert deletion of resources 1`] = `
[
  [
    {
      "action": "add",
      "field": "resourceId",
      "model": "test-resource=resource-1",
      "value": "resource-1",
    },
  ],
]
`;

exports[`TransactionService UT rollbackTransaction() should call revert() for every diff in transaction 1`] = `
[
  [
    {
      "action": "add",
      "field": "name",
      "model": "app=app",
      "value": "app",
    },
    {},
    {},
  ],
]
`;
