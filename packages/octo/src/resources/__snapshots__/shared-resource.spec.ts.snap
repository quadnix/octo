// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SharedResource UT should serialize and deserialize shared-resources with different parents 1`] = `
{
  "dependencies": [
    {
      "behaviors": [
        {
          "forAction": "delete",
          "onAction": "delete",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "parent-resource=parent-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "parent",
      },
      "to": "test-resource=resource-1",
    },
    {
      "behaviors": [
        {
          "forAction": "add",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
        {
          "forAction": "update",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "test-resource=resource-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "child",
      },
      "to": "parent-resource=parent-1",
    },
    {
      "behaviors": [
        {
          "forAction": "delete",
          "onAction": "delete",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "test-resource=resource-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "parent",
      },
      "to": "shared-test-resource=shared-test-resource",
    },
    {
      "behaviors": [
        {
          "forAction": "add",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
        {
          "forAction": "update",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "shared-test-resource=shared-test-resource",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "child",
      },
      "to": "test-resource=resource-1",
    },
  ],
  "resources": {
    "parent-1": {
      "className": "ParentResource",
      "resource": {
        "properties": {},
        "resourceId": "parent-1",
        "response": {},
      },
    },
    "resource-1": {
      "className": "TestResource",
      "resource": {
        "properties": {
          "property1": "property-value-1",
        },
        "resourceId": "resource-1",
        "response": {},
      },
    },
  },
  "sharedResources": {
    "shared-test-resource": {
      "className": "SharedTestResource",
      "resource": {
        "properties": {},
        "resourceId": "shared-test-resource",
        "response": {},
      },
    },
  },
}
`;

exports[`SharedResource UT should serialize and deserialize shared-resources with different parents 2`] = `
{
  "dependencies": [
    {
      "behaviors": [
        {
          "forAction": "delete",
          "onAction": "delete",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "parent-resource=parent-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "parent",
      },
      "to": "test-resource=resource-1",
    },
    {
      "behaviors": [
        {
          "forAction": "add",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
        {
          "forAction": "update",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "test-resource=resource-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "child",
      },
      "to": "parent-resource=parent-1",
    },
    {
      "behaviors": [
        {
          "forAction": "delete",
          "onAction": "delete",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "test-resource=resource-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "parent",
      },
      "to": "shared-test-resource=shared-test-resource",
    },
    {
      "behaviors": [
        {
          "forAction": "delete",
          "onAction": "delete",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "test-resource=resource-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "parent",
      },
      "to": "shared-test-resource=shared-test-resource",
    },
    {
      "behaviors": [
        {
          "forAction": "add",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
        {
          "forAction": "update",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "shared-test-resource=shared-test-resource",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "child",
      },
      "to": "test-resource=resource-2",
    },
    {
      "behaviors": [
        {
          "forAction": "add",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
        {
          "forAction": "update",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "shared-test-resource=shared-test-resource",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "child",
      },
      "to": "test-resource=resource-1",
    },
    {
      "behaviors": [
        {
          "forAction": "delete",
          "onAction": "delete",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "parent-resource=parent-2",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "parent",
      },
      "to": "test-resource=resource-2",
    },
    {
      "behaviors": [
        {
          "forAction": "add",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
        {
          "forAction": "update",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "test-resource=resource-2",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "child",
      },
      "to": "parent-resource=parent-2",
    },
    {
      "behaviors": [
        {
          "forAction": "delete",
          "onAction": "delete",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "test-resource=resource-2",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "parent",
      },
      "to": "shared-test-resource=shared-test-resource",
    },
  ],
  "resources": {
    "parent-1": {
      "className": "ParentResource",
      "resource": {
        "properties": {},
        "resourceId": "parent-1",
        "response": {},
      },
    },
    "parent-2": {
      "className": "ParentResource",
      "resource": {
        "properties": {},
        "resourceId": "parent-2",
        "response": {},
      },
    },
    "resource-1": {
      "className": "TestResource",
      "resource": {
        "properties": {
          "property1": "property-value-1",
        },
        "resourceId": "resource-1",
        "response": {},
      },
    },
    "resource-2": {
      "className": "TestResource",
      "resource": {
        "properties": {
          "property2": "property-value-2",
        },
        "resourceId": "resource-2",
        "response": {},
      },
    },
  },
  "sharedResources": {
    "shared-test-resource": {
      "className": "SharedTestResource",
      "resource": {
        "properties": {},
        "resourceId": "shared-test-resource",
        "response": {},
      },
    },
  },
}
`;

exports[`SharedResource UT should serialize and deserialize shared-resources with parent 1`] = `
{
  "dependencies": [
    {
      "behaviors": [
        {
          "forAction": "delete",
          "onAction": "delete",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "parent-resource=parent-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "parent",
      },
      "to": "test-resource=resource-1",
    },
    {
      "behaviors": [
        {
          "forAction": "add",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
        {
          "forAction": "update",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "test-resource=resource-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "child",
      },
      "to": "parent-resource=parent-1",
    },
    {
      "behaviors": [
        {
          "forAction": "delete",
          "onAction": "delete",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "test-resource=resource-1",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "parent",
      },
      "to": "shared-test-resource=shared-test-resource",
    },
    {
      "behaviors": [
        {
          "forAction": "add",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
        {
          "forAction": "update",
          "onAction": "add",
          "onField": "resourceId",
          "toField": "resourceId",
        },
      ],
      "from": "shared-test-resource=shared-test-resource",
      "relationship": {
        "onField": "resourceId",
        "toField": "resourceId",
        "type": "child",
      },
      "to": "test-resource=resource-1",
    },
  ],
  "resources": {
    "parent-1": {
      "className": "ParentResource",
      "resource": {
        "properties": {},
        "resourceId": "parent-1",
        "response": {},
      },
    },
    "resource-1": {
      "className": "TestResource",
      "resource": {
        "properties": {
          "property1": "property-value-1",
        },
        "resourceId": "resource-1",
        "response": {
          "response1": "response-value-1",
        },
      },
    },
  },
  "sharedResources": {
    "shared-test-resource": {
      "className": "SharedTestResource",
      "resource": {
        "properties": {},
        "resourceId": "shared-test-resource",
        "response": {},
      },
    },
  },
}
`;
