// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Model E2E Test addRelationship() should create a bi-directional relationship 1`] = `
[
  [
    "region=region,app=app",
  ],
]
`;

exports[`Model E2E Test addRelationship() should create a bi-directional relationship 2`] = `
[
  [
    "service=service,app=app",
  ],
]
`;

exports[`Model E2E Test common functions Test app getAncestors() 1`] = `
[
  "app=test",
]
`;

exports[`Model E2E Test common functions Test app getBoundaryMembers() 1`] = `
[
  "app=test",
  "service=service,app=test",
  "server=backend,app=test",
  "deployment=backend@v1,server=backend,app=test",
  "execution=backend@v1_qa,deployment=backend@v1,server=backend,app=test,environment=qa,region=region,app=test",
  "environment=qa,region=region,app=test",
  "region=region,app=test",
  "subnet=region-public,region=region,app=test",
  "pipeline=pipeline,app=test",
  "image=image:0.0.1,app=test",
]
`;

exports[`Model E2E Test common functions Test app getChildren() 1`] = `
[
  "image",
  "pipeline",
  "region",
  "server",
  "service",
]
`;

exports[`Model E2E Test common functions Test app getContext() 1`] = `"app=test"`;

exports[`Model E2E Test common functions Test app getParents() 1`] = `[]`;

exports[`Model E2E Test common functions Test app synth() 1`] = `
{
  "name": "test",
}
`;

exports[`Model E2E Test common functions Test deployment getAncestors() 1`] = `
[
  "deployment=backend@v1,server=backend,app=test",
  "server=backend,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test deployment getBoundaryMembers() 1`] = `
[
  "deployment=backend@v1,server=backend,app=test",
  "server=backend,app=test",
  "app=test",
  "execution=backend@v1_qa,deployment=backend@v1,server=backend,app=test,environment=qa,region=region,app=test",
  "environment=qa,region=region,app=test",
  "region=region,app=test",
]
`;

exports[`Model E2E Test common functions Test deployment getChildren() 1`] = `
[
  "execution",
]
`;

exports[`Model E2E Test common functions Test deployment getContext() 1`] = `"deployment=backend@v1,server=backend,app=test"`;

exports[`Model E2E Test common functions Test deployment getParents() 1`] = `
[
  "server",
]
`;

exports[`Model E2E Test common functions Test deployment synth() 1`] = `
{
  "deploymentTag": "backend@v1",
}
`;

exports[`Model E2E Test common functions Test environment getAncestors() 1`] = `
[
  "environment=qa,region=region,app=test",
  "region=region,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test environment getBoundaryMembers() 1`] = `
[
  "environment=qa,region=region,app=test",
  "region=region,app=test",
  "app=test",
  "execution=backend@v1_qa,deployment=backend@v1,server=backend,app=test,environment=qa,region=region,app=test",
  "deployment=backend@v1,server=backend,app=test",
  "server=backend,app=test",
]
`;

exports[`Model E2E Test common functions Test environment getChildren() 1`] = `
[
  "execution",
]
`;

exports[`Model E2E Test common functions Test environment getContext() 1`] = `"environment=qa,region=region,app=test"`;

exports[`Model E2E Test common functions Test environment getParents() 1`] = `
[
  "region",
]
`;

exports[`Model E2E Test common functions Test environment synth() 1`] = `
{
  "environmentName": "qa",
  "environmentVariables": {},
}
`;

exports[`Model E2E Test common functions Test execution getAncestors() 1`] = `
[
  "execution=backend@v1_qa,deployment=backend@v1,server=backend,app=test,environment=qa,region=region,app=test",
  "environment=qa,region=region,app=test",
  "region=region,app=test",
  "app=test",
  "deployment=backend@v1,server=backend,app=test",
  "server=backend,app=test",
]
`;

exports[`Model E2E Test common functions Test execution getBoundaryMembers() 1`] = `
[
  "execution=backend@v1_qa,deployment=backend@v1,server=backend,app=test,environment=qa,region=region,app=test",
  "environment=qa,region=region,app=test",
  "region=region,app=test",
  "app=test",
  "deployment=backend@v1,server=backend,app=test",
  "server=backend,app=test",
]
`;

exports[`Model E2E Test common functions Test execution getChildren() 1`] = `[]`;

exports[`Model E2E Test common functions Test execution getContext() 1`] = `"execution=backend@v1_qa,deployment=backend@v1,server=backend,app=test,environment=qa,region=region,app=test"`;

exports[`Model E2E Test common functions Test execution getParents() 1`] = `
[
  "deployment",
  "environment",
]
`;

exports[`Model E2E Test common functions Test execution synth() 1`] = `
{
  "deployment": {
    "context": "deployment=backend@v1,server=backend,app=test",
  },
  "environment": {
    "context": "environment=qa,region=region,app=test",
  },
  "environmentVariables": {},
}
`;

exports[`Model E2E Test common functions Test image getAncestors() 1`] = `
[
  "image=image:0.0.1,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test image getBoundaryMembers() 1`] = `
[
  "image=image:0.0.1,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test image getChildren() 1`] = `[]`;

exports[`Model E2E Test common functions Test image getContext() 1`] = `"image=image:0.0.1,app=test"`;

exports[`Model E2E Test common functions Test image getParents() 1`] = `
[
  "app",
]
`;

exports[`Model E2E Test common functions Test image synth() 1`] = `
{
  "dockerOptions": {
    "buildArgs": {},
    "dockerfilePath": "/Dockerfile",
    "quiet": undefined,
  },
  "imageId": "0.0.1",
  "imageName": "image",
  "imageTag": "0.0.1",
}
`;

exports[`Model E2E Test common functions Test pipeline getAncestors() 1`] = `
[
  "pipeline=pipeline,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test pipeline getBoundaryMembers() 1`] = `
[
  "pipeline=pipeline,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test pipeline getChildren() 1`] = `[]`;

exports[`Model E2E Test common functions Test pipeline getContext() 1`] = `"pipeline=pipeline,app=test"`;

exports[`Model E2E Test common functions Test pipeline getParents() 1`] = `
[
  "app",
]
`;

exports[`Model E2E Test common functions Test pipeline synth() 1`] = `
{
  "instructionSet": [],
  "pipelineName": "pipeline",
}
`;

exports[`Model E2E Test common functions Test region getAncestors() 1`] = `
[
  "region=region,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test region getBoundaryMembers() 1`] = `
[
  "region=region,app=test",
  "app=test",
  "environment=qa,region=region,app=test",
  "execution=backend@v1_qa,deployment=backend@v1,server=backend,app=test,environment=qa,region=region,app=test",
  "deployment=backend@v1,server=backend,app=test",
  "server=backend,app=test",
  "subnet=region-public,region=region,app=test",
]
`;

exports[`Model E2E Test common functions Test region getChildren() 1`] = `
[
  "subnet",
  "environment",
]
`;

exports[`Model E2E Test common functions Test region getContext() 1`] = `"region=region,app=test"`;

exports[`Model E2E Test common functions Test region getParents() 1`] = `
[
  "app",
]
`;

exports[`Model E2E Test common functions Test region synth() 1`] = `
{
  "regionId": "region",
}
`;

exports[`Model E2E Test common functions Test server getAncestors() 1`] = `
[
  "server=backend,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test server getBoundaryMembers() 1`] = `
[
  "server=backend,app=test",
  "app=test",
  "deployment=backend@v1,server=backend,app=test",
  "execution=backend@v1_qa,deployment=backend@v1,server=backend,app=test,environment=qa,region=region,app=test",
  "environment=qa,region=region,app=test",
  "region=region,app=test",
]
`;

exports[`Model E2E Test common functions Test server getChildren() 1`] = `
[
  "deployment",
]
`;

exports[`Model E2E Test common functions Test server getContext() 1`] = `"server=backend,app=test"`;

exports[`Model E2E Test common functions Test server getParents() 1`] = `
[
  "app",
]
`;

exports[`Model E2E Test common functions Test server synth() 1`] = `
{
  "serverKey": "backend",
}
`;

exports[`Model E2E Test common functions Test service getAncestors() 1`] = `
[
  "service=service,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test service getBoundaryMembers() 1`] = `
[
  "service=service,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test service getChildren() 1`] = `[]`;

exports[`Model E2E Test common functions Test service getContext() 1`] = `"service=service,app=test"`;

exports[`Model E2E Test common functions Test service getParents() 1`] = `
[
  "app",
]
`;

exports[`Model E2E Test common functions Test service synth() 1`] = `"Method not implemented! Use subclass"`;

exports[`Model E2E Test common functions Test subnet getAncestors() 1`] = `
[
  "subnet=region-public,region=region,app=test",
  "region=region,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test subnet getBoundaryMembers() 1`] = `
[
  "subnet=region-public,region=region,app=test",
  "region=region,app=test",
  "app=test",
]
`;

exports[`Model E2E Test common functions Test subnet getChildren() 1`] = `[]`;

exports[`Model E2E Test common functions Test subnet getContext() 1`] = `"subnet=region-public,region=region,app=test"`;

exports[`Model E2E Test common functions Test subnet getParents() 1`] = `
[
  "region",
]
`;

exports[`Model E2E Test common functions Test subnet synth() 1`] = `
{
  "options": {
    "disableSubnetIntraNetwork": false,
    "subnetType": "private",
  },
  "region": {
    "context": "region=region,app=test",
  },
  "subnetId": "region-public",
  "subnetName": "public",
}
`;

exports[`Model E2E Test getAncestors() should include parent of parent as ancestors 1`] = `
[
  "environment=env-0,region=region-0,app=app",
  "region=region-0,app=app",
  "app=app",
]
`;

exports[`Model E2E Test getAncestors() should include sibling dependency as ancestor with explicit behavior 1`] = `
[
  "service=service,app=app",
  "region=region,app=app",
  "app=app",
]
`;

exports[`Model E2E Test getAncestors() should not include children as ancestor 1`] = `
[
  "region=region-0,app=app",
  "app=app",
]
`;

exports[`Model E2E Test getAncestors() should not include sibling dependency as ancestor without explicit behavior 1`] = `
[
  "service=service,app=app",
  "app=app",
]
`;

exports[`Model E2E Test getAncestors() should not include sibling dependency as ancestor without explicit behavior 2`] = `
[
  "region=region,app=app",
  "app=app",
]
`;

exports[`Model E2E Test getBoundaryMembers() should demonstrate how boundaries can explode because of a common model 1`] = `
[
  "region=region-1,app=test-app",
  "app=test-app",
  "environment=qa,region=region-1,app=test-app",
  "region=region-2,app=test-app",
]
`;

exports[`Model E2E Test getBoundaryMembers() should include models in boundary after they are added as dependents 1`] = `
[
  "region=region,app=test-app",
  "app=test-app",
  "environment=qa,region=region,app=test-app",
  "execution=deployment_qa,deployment=deployment,server=server,app=test-app,environment=qa,region=region,app=test-app",
  "deployment=deployment,server=server,app=test-app",
  "server=server,app=test-app",
]
`;

exports[`Model E2E Test getBoundaryMembers() should include models in boundary after they are added as dependents 2`] = `
[
  "server=server,app=test-app",
  "app=test-app",
  "deployment=deployment,server=server,app=test-app",
  "execution=deployment_qa,deployment=deployment,server=server,app=test-app,environment=qa,region=region,app=test-app",
  "environment=qa,region=region,app=test-app",
  "region=region,app=test-app",
]
`;

exports[`Model E2E Test getBoundaryMembers() should include sibling dependency in boundary 1`] = `
[
  "region=region,app=app",
  "app=app",
  "service=service,app=app",
]
`;

exports[`Model E2E Test getBoundaryMembers() should include sibling's sibling in boundary 1`] = `
[
  "region=region-1,app=app",
  "app=app",
  "image=imageName:imageTag,app=app",
  "region=region-2,app=app",
]
`;

exports[`Model E2E Test getBoundaryMembers() should not include non-dependents in boundary 1`] = `
[
  "region=region,app=test-app",
  "app=test-app",
]
`;
