import { dirname, join } from 'path';
import { fileURLToPath } from 'url';
import { type AModule, type Account, type App, type Constructable, type ModuleSchemaInputs, stub } from '@quadnix/octo';
import { AwsIniAccountModule } from '@quadnix/octo-aws-cdk/modules/account/aws-ini-account';
import { SimpleAppModule } from '@quadnix/octo-aws-cdk/modules/app/simple-app';
import { AwsS3StaticWebsiteServiceModule } from '@quadnix/octo-aws-cdk/modules/service/aws-s3-static-website-service';
import { config } from './app.config.js';

const __dirname = dirname(fileURLToPath(import.meta.url));
const websiteSourcePath = join(__dirname, 'website');

type ModuleDefinition<T extends AModule<unknown, any>> = {
  module: Constructable<T>;
  moduleId: string;
  moduleInputs: ModuleSchemaInputs<T>;
};

export class ModuleDefinitions {
  private readonly moduleDefinitions: ModuleDefinition<AModule<unknown, any>>[] = [];

  constructor() {
    this.init();
  }

  add<T extends AModule<unknown, any>>(
    module: Constructable<T>,
    moduleId: string,
    moduleInputs: ModuleSchemaInputs<T>,
  ): void {
    this.moduleDefinitions.push({ module, moduleId, moduleInputs });
  }

  getAll(): ModuleDefinitions['moduleDefinitions'] {
    return this.moduleDefinitions;
  }

  private init(): void {
    this.add(SimpleAppModule, 'app-module', { name: 'aws-s3-website' });

    this.add(AwsIniAccountModule, 'account-module', {
      accountId: config.AWS_ACCOUNT_ID,
      app: stub<App>('${{app-module.model.app}}'),
    });

    this.add(AwsS3StaticWebsiteServiceModule, 's3-website-service-module', {
      account: stub<Account>('${{account-module.model.account}}'),
      awsRegionId: 'us-east-1',
      bucketName: config.AWS_S3_WEBSITE_BUCKET_NAME,
      directoryPath: websiteSourcePath,
    });
  }
}
